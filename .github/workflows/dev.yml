name: Dev

on:
  push:
    branches: [dev]
    paths:
      - "code/**"
      - "tests/**"
      - ".github/workflows/dev.yml"
      - "Makefile"
      - "Dockerfile"
      - "docker-compose.yml"
  workflow_dispatch: {}

concurrency:
  group: dev
  cancel-in-progress: true

jobs:
  build-tools:
    name: Build & Publish Tool Images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.dev_local
      PLATFORM: amd64
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - run: cd code && python manage.py migrate --run-syncdb

      - name: Build and publish tool images
        run: make build-and-publish-all PLATFORM=amd64

      - name: Commit pin updates
        if: ${{ !contains(github.event.head_commit.message, 'pin:') }}
        env:
          ADMIN_GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        run: |
          git config user.name "pin-bot"
          git config user.email "pin-bot@users.noreply.github.com"
          if ! git diff --quiet tools/; then
            git add tools/
            git commit -m "pin: update tool digests (dev)"
            git config --unset http.https://github.com/.extraheader || true
            git remote set-url origin https://x-access-token:${ADMIN_GITHUB_TOKEN}@github.com/veyorokon/theory-api.git
            git pull --rebase origin dev
            git push
          fi

  build-django:
    name: Build & Publish Django Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Django image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/veyorokon/theory-django:sha-${{ github.sha }}
            ghcr.io/veyorokon/theory-django:dev
          cache-from: type=registry,ref=ghcr.io/veyorokon/theory-django:dev
          cache-to: type=inline

  test-modal:
    name: Test with Modal Adapter
    needs: build-tools
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.production
      DJANGO_SECRET_KEY: test-key-for-ci
      DATABASE_URL: sqlite:////home/runner/work/theory-api/theory-api/code/test.db
      STORAGE_BACKEND: s3
      STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
      STORAGE_SECRET_KEY: ${{ secrets.STORAGE_SECRET_KEY }}
      ARTIFACTS_REGION: nyc3
      ARTIFACTS_ENDPOINT: https://nyc3.digitaloceanspaces.com
      ADAPTER: modal
      TEST_ADAPTER: modal
      PLATFORM: amd64
      APP_ENV: dev
      MOCK_MISSING_SECRETS: "false"
      MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
      MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev  # Get latest dev with pin commits
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - run: cd code && python manage.py migrate --noinput
      - run: cd code && python manage.py toolctl sync

      - name: Deploy tools to Modal
        run: make start-tools ADAPTER=modal

      - name: Run integration tests
        run: make test-integration

  promote:
    name: Promote to Staging
    needs: [build-django, test-modal]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: dev
      - name: Fast-forward staging
        env:
          ADMIN_GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        run: |
          git config user.name "promotion-bot"
          git config user.email "promotion-bot@users.noreply.github.com"
          git config --unset http.https://github.com/.extraheader || true
          git remote set-url origin https://x-access-token:${ADMIN_GITHUB_TOKEN}@github.com/veyorokon/theory-api.git
          git push origin dev:staging --force-with-lease
          echo "✅ Promoted dev → staging"
