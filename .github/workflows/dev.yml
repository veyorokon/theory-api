name: Dev Lane

on:
  push:
    branches: [ dev ]
    paths:
      - "code/**"
      - "tests/**"
      - ".github/workflows/dev.yml"
      - "Makefile"
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-and-test:
    name: Deploy to Modal (dev) and test
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.dev_remote
      ADAPTER: modal
      ENV: dev
      PLATFORM: amd64
      MODAL_ENVIRONMENT: dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Start tools on Modal
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: make start-tools

      - name: Integration tests
        run: make test-integration

  promote_to_staging:
    name: "Open PR: dev -> staging"
    needs: deploy-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for branch operations
      - name: Create PR from dev to staging
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Check if PR already exists for this dev SHA
          EXISTING_PR=$(gh pr list --base staging --head dev --state open --json number --jq '.[0].number' || echo "")

          if [ -z "$EXISTING_PR" ]; then
            echo "Creating new PR from dev to staging"
            gh pr create \
              --base staging \
              --head dev \
              --title "Promote: dev -> staging" \
              --body "## üöÄ Staging Promotion

          This PR promotes validated changes from dev to staging for build and deployment.

          ### Validation Status
          - ‚úÖ **Unit tests**: All tests passed
          - ‚úÖ **Build verification**: Processor image built successfully
          - ‚úÖ **Integration tests**: Local integration tests passed
          - ‚úÖ **Secret sync**: Dev environment secrets synced

          ### Dev Info
          - **Run ID**: ${{ github.run_id }}
          - **SHA**: ${{ github.sha }}
          - **Workflow**: [View run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ---

          **Ready for staging build and deployment.**"

            echo "‚úÖ PR created successfully"
          else
            echo "‚ö†Ô∏è PR #$EXISTING_PR already exists from dev to staging"
            echo "Updating existing PR with latest run info"

            gh pr comment $EXISTING_PR --body "## Updated from Run #${{ github.run_id }}

          - **SHA**: ${{ github.sha }}
          - **Workflow**: [View run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Status**: ‚úÖ All validations passed"
          fi
