name: PR Lane

on:
  pull_request:
    branches: [ dev ]
    paths:
      - "code/**"
      - "code/apps/core/processors/**"     # NEW: explicit processors
      - "tests/**"
      - ".github/workflows/pr.yml"
      - "Makefile"
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.unittest
      TEST_LANE: pr
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Unit tests
        run: make test-unit

  integration-local:
    name: Integration tests (local adapter)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.dev_local
      ADAPTER: local
      PLATFORM: amd64
      MOCK_MISSING_SECRETS: true
      TEST_ADAPTER: local
      MODAL_ENVIRONMENT: dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run migrations
        run: cd code && python manage.py migrate --run-syncdb

      - name: Build and publish images
        run: make build-and-publish-all PLATFORM=amd64

      - name: Start tools from registry
        run: make start-tools ADAPTER=local

      - name: Integration tests
        run: make test-integration

      - name: Cleanup
        if: always()
        run: make stop-tools && make services-down

  integration-modal:
    name: Integration tests (modal adapter)
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.dev_remote
      ADAPTER: modal
      PLATFORM: amd64
      MODAL_ENVIRONMENT: dev
      TEST_ADAPTER: modal
      MOCK_MISSING_SECRETS: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - run: cd code && python manage.py migrate --noinput

      - name: Start tools on Modal (dev)
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: make start-tools

      - name: Integration tests
        run: make test-integration

  # TODO: Add parity job to compare local vs modal envelopes (byte-identical in mock mode)
  # Validates spec requirement: "Adapters differ only in transport, no business policy"

  contracts:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.unittest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Contract tests
        run: make test-contracts
