name: PR

on:
  pull_request:
    branches: [dev]
    paths:
      - "code/**"
      - "tests/**"
      - "tools/**/registry.yaml"
      - ".github/workflows/pr.yml"
      - "Makefile"
      - "requirements*.txt"
  workflow_dispatch: {}

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  validate:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run ruff lint
        run: ruff check .
      - name: Run ruff format check
        run: ruff format --check .

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.unittest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run unit tests
        run: make test-unit

  test-contracts:
    name: Contract Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.unittest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run contract tests
        run: make test-contracts

  build-django:
    name: Build Django Container
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Django image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/veyorokon/theory-django:sha-${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/veyorokon/theory-django:dev
          cache-to: type=inline

      - name: Test container startup
        run: |
          # Test that image can start and basic Django setup works
          docker run --rm \
            -e DJANGO_SETTINGS_MODULE=backend.settings.unittest \
            -e DJANGO_SECRET_KEY=test-key \
            -e APP_ENV=dev \
            ghcr.io/veyorokon/theory-django:sha-${{ github.sha }} \
            python -c "import django; django.setup(); print('âœ… Django setup successful')"

  test-integration:
    name: Integration Tests (local adapter)
    needs: build-django
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.dev_local
      ADAPTER: local
      PLATFORM: amd64
      APP_ENV: dev
      MOCK_MISSING_SECRETS: "true"
      TEST_ADAPTER: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run migrations
        run: cd code && python manage.py migrate --run-syncdb

      - name: Build tool images (no push)
        run: make build-images PLATFORM=amd64

      - name: Start local tools
        run: make start-tools ADAPTER=local

      - name: Run integration tests
        run: make test-integration

      - name: Cleanup
        if: always()
        run: make stop-tools && make services-down
