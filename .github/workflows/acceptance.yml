name: Acceptance & Property

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]
    types: [opened, synchronize, labeled]
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch: {}

jobs:
  acceptance:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-acceptance'))
    permissions:
      contents: read
      packages: read
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_DEV }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -U pip wheel
          pip install -r requirements.txt

      - name: Bring up services (Docker)
        run: |
          docker version
          docker compose version
          docker compose up -d postgres redis minio

      - name: Wait for services
        run: |
          for i in {1..30}; do
            curl -fsS http://127.0.0.1:9000/minio/health/live && break
            echo "waiting for MinIO..."; sleep 2
          done
          docker compose ps

      - name: Authenticate Docker to GHCR
        run: |
          echo "${{ secrets.GHCR_RO || secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Assert pinned image exists in GHCR
        run: |
          set -euo pipefail
          REF=$(python - <<'PY'
          import yaml
          doc=yaml.safe_load(open("code/apps/core/registry/processors/llm_litellm.yaml"))
          print(doc["image"]["oci"])
          PY
          )
          echo "üîç Checking $REF in GHCR‚Ä¶"
          docker manifest inspect "$REF" >/dev/null || {
            echo "::error::Pinned image not found in GHCR: $REF";
            echo "Run Build & Pin workflow and merge the PR.";
            exit 1;
          }
          echo "‚úÖ Image exists: $REF"

      - name: Sanity check - verify Django imports
        working-directory: code
        run: |
          python -c "import os,sys; print('‚úÖ CWD:', os.getcwd()); import backend, apps; print('‚úÖ Django imports OK')"

      - name: Acceptance tests
        run: |
          make test-acceptance

      - name: Property tests
        run: |
          make test-property

      - name: Integration tests (deterministic seams)
        working-directory: code
        env:
          DJANGO_SETTINGS_MODULE: backend.settings.test
          DOCKER_PULL_PLATFORM: linux/amd64
          S3_ENDPOINT: http://127.0.0.1:9000
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin
          S3_BUCKET: default
        run: |
          echo "üîç MinIO health:"
          curl -f http://127.0.0.1:9000/minio/health/live || echo "‚ö†Ô∏è MinIO health check failed"
          python -m pytest -s -v -m integration tests/integration

      - name: Teardown & logs
        if: always()
        run: |
          echo "----- docker compose ps -----"
          docker compose ps || true
          echo "----- docker compose logs (last 200 lines) -----"
          docker compose logs --tail=200 || true
          docker compose down -v || { echo "compose down: nothing to stop (ok)"; exit 0; }
