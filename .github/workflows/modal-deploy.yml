name: Modal Deploy

on:
  push:
    branches: [dev, staging, main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Modal environment override (dev|staging|main)"
        required: false
        default: ""

jobs:
  deploy:
    name: Deploy to Modal
    runs-on: ubuntu-latest
    # Map git branch to GitHub Environment
    environment: ${{ inputs.environment != '' && inputs.environment || (github.ref_name == 'main' && 'prod' || github.ref_name) }}
    permissions:
      contents: read
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"
      MODAL_ENVIRONMENT: ${{ inputs.environment != '' && inputs.environment || github.ref_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -U pip wheel
          pip install -r requirements.txt
          pip install modal pyyaml

      - name: Extract pinned IMAGE_REF from registry
        id: image
        run: |
          set -euo pipefail
          python - <<'PY' >> $GITHUB_OUTPUT
          import yaml, sys
          doc=yaml.safe_load(open("code/apps/core/registry/processors/llm_litellm.yaml"))
          print(f"IMAGE_REF={doc['image']['oci']}")
          PY

      - name: Deploy Modal App (committed module)
        working-directory: code
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          IMAGE_REF: ${{ steps.image.outputs.IMAGE_REF }}
          PROCESSOR_REF: "llm/litellm@1"
          TOOL_SECRETS: "OPENAI_API_KEY"
        run: |
          set -euo pipefail
          echo "Deploying app for REF=$PROCESSOR_REF ENV=$MODAL_ENVIRONMENT IMAGE=$IMAGE_REF"
          modal deploy --env "${MODAL_ENVIRONMENT}" -m modal_app

      - name: Post-deploy smoke (Modal synthetic transaction)
        working-directory: code
        env:
          DJANGO_SETTINGS_MODULE: backend.settings.unittest
          MODAL_ENABLED: "true"
          MODAL_ENVIRONMENT: ${{ inputs.environment != '' && inputs.environment || github.ref_name }}
        run: |
          set -euo pipefail
          echo "ðŸ§ª Running post-deploy smoke test..."
          OUT=$(python manage.py run_processor \
            --ref llm/litellm@1 \
            --adapter modal \
            --mode smoke \
            --write-prefix /artifacts/outputs/smoke/{execution_id}/ \
            --inputs-json '{"schema":"v1","model":"gpt-4o-mini","params":{"messages":[{"role":"user","content":"deployment smoke test"}]},"mode":"mock"}' \
            --json)
          echo "$OUT"

          python - <<'PY' <<EOF
          import json, sys
          payload=json.loads(sys.stdin.read())
          assert payload.get("status")=="success", payload
          assert payload.get("execution_id"), "missing execution_id"
          outs=sorted([o["path"].rsplit("/",1)[-1] for o in payload.get("outputs",[])])
          assert outs==["receipt.json","response.json"], outs
          assert "index_path" in payload
          print("âœ… Modal deployment verified:", payload["execution_id"])
          EOF
          PY
