services:
  postgres:
    profiles: [ "base", "full" ]
    image: postgres:15.10
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    networks:
      - theory_api_app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    profiles: [ "full" ]
    image: quay.io/minio/minio:RELEASE.2025-01-20T14-49-07Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    networks:
      theory_api_app_network:
        aliases:
          - minio.local
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 3s
      retries: 12
      start_period: 10s

  django:
    profiles: [ "full" ]
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=backend.settings.production
      - DJANGO_SECRET_KEY=test-key-only-for-local-testing
      - DATABASE_URL=postgres://postgres:postgres_password@postgres:5432/postgres
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - SECURE_SSL_REDIRECT=False
      - STORAGE_BACKEND=minio
      - APP_ENV=dev
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - theory_api_app_network

volumes:
  postgres_data:
  minio_data:
  redis_data:


networks:
  theory_api_app_network:
    driver: bridge
